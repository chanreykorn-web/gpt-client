import {
  Tabs_default
} from "./chunk-7542U6UK.js";
import "./chunk-QLRZOQE7.js";
import "./chunk-VDYAMAGJ.js";
import "./chunk-5DQV6HLO.js";
import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-QRJ4GZEC.js";
import "./chunk-TKS5FRHW.js";
import "./chunk-YUHH6ZNE.js";
import "./chunk-FC2LZWO7.js";
import "./chunk-GOZHMSIK.js";
import "./chunk-JBE5NFOI.js";
import "./chunk-OKKCLB7Y.js";
import "./chunk-FHGYHSLW.js";
import "./chunk-GAHHSVHE.js";
import "./chunk-3UEV5FQM.js";
import "./chunk-NFKLG7W7.js";
import "./chunk-ZMOSEMBB.js";
import {
  require_prop_types
} from "./chunk-J4LPPHPF.js";
import {
  require_jsx_runtime
} from "./chunk-NJLIVH7H.js";
import {
  require_react
} from "./chunk-HUL2CLQT.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@mui/lab/esm/TabList/TabList.js
var React = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp,
    ...other
  } = props;
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, {
    ...other,
    ref,
    value: context.value,
    children
  });
});
true ? TabList.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
